{"version":3,"sources":["components/Page/Home/section5/Topfilm.js"],"names":["Slider1","backdrop_path","props","className","src","alt","Topfilm","state","useContext","MovieContext","useState","nav1","setNav1","nav2","setNav2","slider1","useMemo","slider2","fomatData","data","filter","movie","type","query","vote_count","sort","a","b","useEffect","asNavFor","ref","slider","map","index","id","swipeToSlide","focusOnSelect","dots","infinite","slidesToShow","slidesToScroll","vertical","verticalSwiping","beforeChange","currentSlide","nextSlide","afterChange","isChangeSize"],"mappings":"qNAMA,SAASA,EAAT,GAAgD,IAApBC,EAAmB,EAA5BC,MAASD,cAC1B,OACE,mCACE,qBAAKE,UAAU,2BAAf,SACE,qBAAKC,IAAKH,EAAeI,IAAI,SAyFtBC,UAnFf,WACE,IAAQC,EAAUC,qBAAWC,KAArBF,MAER,EAAwBG,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEIC,EAAUC,mBAAQ,iBAAM,KAAI,IAC5BC,EAAUD,mBAAQ,iBAAM,KAAI,IAE1BE,EAAYX,EAAMY,KACrBC,QAAO,SAACC,GACP,OAAOA,EAAMC,OAASf,EAAMgB,OAASF,EAAMG,YAAc,KAE1DC,MAAK,SAACC,EAAGC,GACR,OAAOA,EAAEH,WAAaE,EAAEF,cAkB5B,OALAI,qBAAU,WACRhB,EAAQG,GACRD,EAAQG,KACP,CAACF,EAASE,IAGX,mCACE,yBAASd,UAAU,iBAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,oBAAIA,UAAU,sBAAd,4BAGJ,sBAAKA,UAAU,0CAAf,UACE,cAAC,IAAD,CACE0B,SAAUhB,EACViB,IAAK,SAACC,GAAD,OAAahB,EAAUgB,GAC5B5B,UAAU,wBAHZ,SAKGe,EAAUc,KAAI,SAAUX,EAAOY,GAC9B,OACE,gCACE,cAACjC,EAAD,CAAwBE,MAAOmB,GAAjBA,EAAMa,IADtB,MAAUD,QAMhB,qBAAK9B,UAAU,sBAAf,SACE,cAAC,IAAD,yBACE0B,SAAUlB,EACVmB,IAAK,SAACC,GAAD,OAAad,EAAUc,GAC5BI,cAAc,EACdC,eAAe,GA5CZ,CACfC,MAAM,EACNC,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,iBAAiB,EACjBC,aAAc,SAAUC,EAAcC,KACtCC,YAAa,SAAUF,OAgCb,aAOG1B,EAAUc,KAAI,SAAUX,EAAOY,GAC9B,OACE,8BACE,cAAC,IAAD,CAEE/B,MAAOmB,EACP0B,cAAc,GAFT1B,EAAMa,KAFLD","file":"static/js/8.c5efb38a.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\r\nimport { MovieContext } from \"../../../../context/Context\";\r\nimport Slider from \"react-slick\";\r\nimport Slide2 from \"../../../Movie/Slide2\";\r\nimport \"./TopFilm.scss\";\r\n\r\nfunction Slider1({ props: { backdrop_path } }) {\r\n  return (\r\n    <>\r\n      <div className=\"home__topFilm-background\">\r\n        <img src={backdrop_path} alt=\"\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Topfilm() {\r\n  const { state } = useContext(MovieContext);\r\n\r\n  const [nav1, setNav1] = useState(null);\r\n  const [nav2, setNav2] = useState(null);\r\n\r\n  let slider1 = useMemo(() => [], []);\r\n  let slider2 = useMemo(() => [], []);\r\n\r\n  const fomatData = state.data\r\n    .filter((movie) => {\r\n      return movie.type !== state.query && movie.vote_count >= 8;\r\n    })\r\n    .sort((a, b) => {\r\n      return b.vote_count - a.vote_count;\r\n    });\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    vertical: true,\r\n    verticalSwiping: true,\r\n    beforeChange: function (currentSlide, nextSlide) {},\r\n    afterChange: function (currentSlide) {},\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNav1(slider1);\r\n    setNav2(slider2);\r\n  }, [slider1, slider2]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"home__topFilm \">\r\n        <div className=\"grid wide\">\r\n          <div className=\"row no-gutters \">\r\n            <div className=\"col l-12\">\r\n              <h2 className=\"home__topFilm-title\">Top movie </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"row no-gutters home__topFilm-container \">\r\n            <Slider\r\n              asNavFor={nav2}\r\n              ref={(slider) => (slider1 = slider)}\r\n              className=\"home__topFilm-wrapper\"\r\n            >\r\n              {fomatData.map(function (movie, index) {\r\n                return (\r\n                  <div key={index}>\r\n                    <Slider1 key={movie.id} props={movie} />;\r\n                  </div>\r\n                );\r\n              })}\r\n            </Slider>\r\n            <div className=\"home__topFilm-small\">\r\n              <Slider\r\n                asNavFor={nav1}\r\n                ref={(slider) => (slider2 = slider)}\r\n                swipeToSlide={true}\r\n                focusOnSelect={true}\r\n                {...settings}\r\n              >\r\n                {fomatData.map(function (movie, index) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Slide2\r\n                        key={movie.id}\r\n                        props={movie}\r\n                        isChangeSize={false}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Topfilm;\r\n"],"sourceRoot":""}